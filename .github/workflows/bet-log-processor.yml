name: Bet Log Processor

on:
  schedule:
    # Run every 10 minutes
    - cron: '*/10 * * * *'
  workflow_dispatch: # Allow manual triggering
  push:
    paths:
      - '.github/workflows/bet-log-processor.yml'

jobs:
  process-bet-logs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Fetch Torn City Logs
      id: fetch-logs
      run: |
        echo "üîÑ Fetching Torn City logs..."
        
        # Fetch logs from Torn API
        LOGS_RESPONSE=$(curl -s "https://api.torn.com/user/?selections=log&key=${{ secrets.TORN_API_KEY }}&comment=BetLogProcessor")
        
        # Check if API call was successful
        if echo "$LOGS_RESPONSE" | grep -q '"error"'; then
          echo "‚ùå Error fetching logs:"
          echo "$LOGS_RESPONSE"
          exit 1
        fi
        
        echo "‚úÖ Successfully fetched logs"
        echo "logs_response<<EOF" >> $GITHUB_OUTPUT
        echo "$LOGS_RESPONSE" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT
        
    - name: Process and Filter Bet Logs
      id: process-logs
      run: |
        echo "üîç Processing and filtering bet logs..."
        
        # Create data directory if it doesn't exist
        mkdir -p data
        
        # Process logs using the dedicated script
        node scripts/process-bet-logs.js "${{ steps.fetch-logs.outputs.logs_response }}"
        
    - name: Create Bet Confirmation Summary
      id: create-summary
      run: |
        echo "üìä Creating bet confirmation summary..."
        
        # Load the processed data
        if [ -f "data/bet-logs.json" ]; then
          SUMMARY=$(node -e "
          try {
            const data = JSON.parse(require('fs').readFileSync('data/bet-logs.json', 'utf8'));
            
            const pendingBets = data.bet_logs.filter(log => !log.processed);
            const processedBets = data.bet_logs.filter(log => log.processed);
            
            const summary = {
              total_bet_logs: data.bet_logs.length,
              pending_confirmations: pendingBets.length,
              processed_confirmations: processedBets.length,
              last_updated: data.metadata.last_updated,
              recent_bets: pendingBets.slice(0, 5).map(bet => ({
                betId: bet.betId,
                warId: bet.warId,
                factionId: bet.factionId,
                xanaxAmount: bet.xanaxAmount,
                sender: bet.sender,
                timestamp: new Date(bet.timestamp * 1000).toISOString()
              }))
            };
            
            console.log(JSON.stringify(summary, null, 2));
          } catch (error) {
            console.error('Error creating summary:', error);
          }
          ")
          
          echo "summary<<EOF" >> $GITHUB_OUTPUT
          echo "$SUMMARY" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "No bet-logs.json found"
        fi
        
    - name: Commit and Push Changes
      run: |
        echo "üíæ Committing and pushing changes..."
        
        # Configure git
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Add changes
        git add data/bet-logs.json
        
        # Check if there are changes to commit
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          # Commit changes
          git commit -m "ü§ñ Automated bet log processing - $(date -u +'%Y-%m-%d %H:%M:%S UTC')
          
          üìä Summary:
          - Total bet logs: ${{ fromJson(steps.create-summary.outputs.summary).total_bet_logs || 0 }}
          - Pending confirmations: ${{ fromJson(steps.create-summary.outputs.summary).pending_confirmations || 0 }}
          - Processed confirmations: ${{ fromJson(steps.create-summary.outputs.summary).processed_confirmations || 0 }}
          
          üîÑ Last updated: ${{ fromJson(steps.create-summary.outputs.summary).last_updated || 'N/A' }}"
          
          # Push changes
          git push
          echo "‚úÖ Changes committed and pushed"
        fi
        
    - name: Create Summary Comment
      if: github.event_name == 'workflow_dispatch'
      uses: actions/github-script@v7
      with:
        script: |
          const summary = ${{ fromJson(steps.create-summary.outputs.summary) }};
          
          if (summary) {
            const comment = \`
            ## ü§ñ Bet Log Processing Summary
            
            **üìä Statistics:**
            - Total bet logs: \${summary.total_bet_logs}
            - Pending confirmations: \${summary.pending_confirmations}
            - Processed confirmations: \${summary.processed_confirmations}
            
            **üïí Last Updated:** \${summary.last_updated}
            
            **üìã Recent Pending Bets:**
            \${summary.recent_bets.map(bet => \`
            - Bet ID: \${bet.betId} | War: \${bet.warId} | Faction: \${bet.factionId} | Xanax: \${bet.xanaxAmount} | Sender: \${bet.sender}
            \`).join('')}
            
            **‚úÖ Status:** Processing completed successfully
            \`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } 